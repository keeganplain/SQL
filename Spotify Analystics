# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#What soungs are more likely to get you to dance?
SELECT 
  id, 
  artist_name, 
  track_name, 
  danceability 
FROM 
  BIT_DB.Spotifydata
ORDER BY 
  danceability DESC
LIMIT 5;

#Who is the top 5 most popular artists in 2021?
SELECT id, artist_name 
FROM BIT_DB.Spotifydata
LIMIT 5

#How does danceability of the song influence its popularity?
SELECT id, artist_name, track_name, danceability 
FROM BIT_DB.Spotifydata
LIMIT 5

#What are the best key and modality for a song to be "popular"?
SELECT id, artist_name, track_name, song_key, song_mode 
FROM BIT_DB.Spotifydata
LIMIT 5

#Which artists has the most songs on Spotifys top 50 chart?
SELECT artist_name, COUNT(artist_name) AS quantity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY quantity DESC
LIMIT 2

#Who are the top 10 artists based on popularity? 
SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10

#What artist released the longest song? 
SELECT artist_name, track_name, duration_ms
FROM BIT_DB.Spotifydata
GROUP BY duration_ms
ORDER BY duration_ms DESC
LIMIT 1
